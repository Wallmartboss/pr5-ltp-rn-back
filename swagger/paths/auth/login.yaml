tags:
  - Auth
summary: User login
operationId: userLogin
description: 'Login with email and password'
security:
  - bearerAuth: []
requestBody:
  required: true
  content:
    application/json:
      schema:
        type: object
        required:
          - email
          - password
        properties:
          email:
            description: "User's email (must contain '@')"
            type: string
            format: email
            example: 'user@example.com'
            pattern: '/^[a-zA-Z0-9!#$%^&`*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%^&`*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z0-9-]{2,}$/'
          password:
            description: "User's password (8-64 characters, allows alphanumeric and special characters)"
            type: string
            format: password
            example: 'P@ssw0rd!123'
            minLength: 8
            maxLength: 64
            pattern: '^[a-zA-Z0-9!@#$%^&*()_+\=\[\]{}|;:\`",.<>?/-]*$'
responses:
  '200':
    description: 'User successfully logged in'
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - token
          properties:
            status:
              type: integer
              example: 200
            message:
              type: string
              example: Successfully logged in!
            token:
              type: string
              example: 'Bearer token_string'
  '400':
    $ref: '../../components/responses/400.yaml'
  '401':
    $ref: '../../components/responses/401.yaml'
  '500':
    $ref: '../../components/responses/500.yaml'
